buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
//        classpath 'io.fabric.tools:gradle:1.21.7'
    }
}
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: rootProject.file('jacoco.gradle')

clean.doFirst {
    delete "${rootDir}/api-library/auto-generated-classes/"
    println "${rootDir}/api-library/auto-generated-classes/"
}
android {
    signingConfigs {
        config {
            keyAlias 'Darden'
            keyPassword 'LongHorn'
            storeFile file('LongHorn.jks')
            storePassword 'LongHorn'
        }
    }
    compileSdkVersion 24
    buildToolsVersion "24.0.1"
    dexOptions {
        javaMaxHeapSize "4g"
    }
    defaultConfig {
        applicationId "com.darden.mobile.longhorn"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    productFlavors {
        LongHorn_Prod {
            applicationId = "com.darden.mobile.longhorn"
            versionName "1"
            multiDexEnabled true
        }
        LongHorn_Dev {
            applicationId = "com.darden.mobile.longhorn.dev"
            versionName "5001"
            multiDexEnabled true
        }
        LongHorn_Stage {
            applicationId = "com.darden.mobile.longhorn.stage"
            versionName "1"
            multiDexEnabled true
        }
        repositories {
            //    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix calculateVersionNameSuffix()
            //  signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix calculateVersionNameSuffix()
            // for jococo
            testCoverageEnabled = true
            signingConfig signingConfigs.config
        }
    }
    android.applicationVariants.all { variant ->
        def appName
        //Check if an applicationName property is supplied; if not use the name of the parent project.
        if (project.hasProperty("applicationName")) {
            appName = variant.productFlavors[0].name;//android.applicationName
            print("app name === >" + appName + "\n")
        } else {
//            appName = parent.name
            appName = variant.productFlavors[0].name;//android.applicationName
        }

        print("app name12 === >" + appName + "\n")
        variant.outputs.each { output ->
            def newApkName
            //If there's no ZipAlign task it means that our artifact will be unaligned and we need to mark it as such.
            if (output.zipAlign) {
//                newApkName = "${appName}_${calculateVersionName()}.apk" // For jenkin
                newApkName = "${appName}_${calculateVersionNameForDev()}_QA.apk"// For Development
            } else {
                newApkName = "${appName}-${calculateVersionName()}_QA.apk"
            }
            output.outputFile = new File(output.outputFile.parent, newApkName)
        }
    }
    android.applicationVariants.all { variant ->
        variant.assemble.doLast {
            variant.outputs.each { output ->
                println "aligned " + output.outputFile
                println "unaligned " + output.packageApplication.outputFile

                File file = output.packageApplication.outputFile;
                if (variant.buildType.zipAlignEnabled && file.getName().contains("unaligned")) {
                    println "deleting " + file.getName()
                    file.delete()
                }
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/drawable'] } }
    packagingOptions {
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.xml'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.properties'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

repositories {
    //   maven { url 'http://mobile-sdk.jumio.com' }
    maven { url 'https://maven.fabric.io/public' }
}

ext {
    SDK_VERSION = "1.9.0"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile files('libs/pass-v1.1.4.jar')
    compile files('libs/sdk-v1.0.0.jar')
    // circular image view used for profile picture in circular form
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    //FaceBook integration
    compile('com.facebook.android:facebook-android-sdk:4.8+') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile('com.squareup.retrofit2:converter-gson:2.0.2')
            {
                exclude module: 'gson';
            }

    // Glide (for image cache)
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.2'
    compile 'com.google.android.gms:play-services-maps:10.2.0'
    compile 'com.google.android.gms:play-services-location:10.2.0'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.google.android.gms:play-services-places:10.2.0'
    compile 'javax.inject:javax.inject:1'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-scalars:2.0.2'
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'
    compile 'com.github.lzyzsd:circleprogress:1.1.0@aar'
    compile 'com.google.maps.android:android-maps-utils:0.4.+'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    testCompile 'org.robolectric:robolectric:3.1'
    testCompile 'org.robolectric:shadows-multidex:3.1'
    testCompile 'org.robolectric:shadows-support-v4:3.1'
    testCompile 'junit:junit:4.10'
    testCompile 'commons-io:commons-io:2.4'
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
}
apply plugin: 'com.google.gms.google-services'

def versionNameString() {
    return "5001";
}


def calculateVersionNameSuffix() {
    def name = "";
    def date = new Date();
    name += "_" + date.format("yyyy-dd-MM_HH:mm");
    name = "";
    return name;
}

def calculateVersionName() {
    return versionNameString() + calculateVersionNameSuffix();
}

def calculateVersionNameForDev() {
    return versionNameString();
}